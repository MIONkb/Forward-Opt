module attributes {torch.debug_module_name = "simple"} {
  func.func @forward(%arg0: tensor<1x3x16x16xf32>) -> tensor<1x8x16x4xf32> {
    %0 = "tosa.const"() <{value = dense<1.000010e+00> : tensor<8x1x1xf32>}> : () -> tensor<8x1x1xf32>
    %1 = "tosa.const"() <{value = dense<[1, 0]> : tensor<2xi32>}> : () -> tensor<2xi32>
    %2 = "tosa.const"() <{value = dense<[0, 3, 1, 2]> : tensor<4xi32>}> : () -> tensor<4xi32>
    %3 = "tosa.const"() <{value = dense<[0, 2, 3, 1]> : tensor<4xi32>}> : () -> tensor<4xi32>
    %4 = "tosa.const"() <{value = dense<[-0.0717707872, -0.0423891321, 0.00969634484, -0.0271288622, -0.130245402, -0.150103226, -0.0827921405, -0.0530781448]> : tensor<8xf32>}> : () -> tensor<8xf32>
    %5 = "tosa.const"() <{value = dense<"0xtensor<8x3x3x3xf32>}> : () -> tensor<8x3x3x3xf32>
    %6 = "tosa.const"() <{value = dense<[-0.132966399, -0.10632199, -6.313750e-02, 0.111462414, -0.0230877101, -2.71707773E-4, -0.102463722, -0.227972597]> : tensor<8xf32>}> : () -> tensor<8xf32>
    %7 = "tosa.const"() <{value = dense<"0xD4DA02BE9CFD59BE6050E1BDA260473EC08246BDA0E52DBEE8A9583D6C66593E0808E3BD18B16D3E968053BE8E01593E6A121E3E402946BD22457F3E88E26FBD3EAC34BEE47D67BEEE7D493E1013453DC853AB3D12A4063E28AA253DEA452ABE80FE62BB3E11443EC0B9C93BEC2387BDC084323C94D92FBEA413873D6EDD1CBEB22279BE50640D3EC090403DC6F33EBEA46A5CBEC06E5DBE946596BDE8E038BE94BD16BE6075A3BDCC97763E4C763F3EC0FC693D7CD2063EC42F743E72F601BEA8966DBE1052413D20EDEC3D96303B3E804CAFBDE01954BD2090B3BDF09C94BC12B378BE7A715BBE90862DBE2030773DDECB143E4E03633EDEBD00BE948483BDBECF0F3EC21506BED0A83BBE546BCC3D8AE619BE502E5F3DECB2513EB0A1C53C746BEEBDE682453EF09677BE98F9363E7C72143E2C3B9BBDC44AD5BD505F7EBD72417D3E084418BE10BB643E6837123D688A4ABD70E8713E00A0D0BA9038573D0C9AC6BDF4155F3E64F3C3BD30D01F3E940D2E3E1A55273E54724B3E980F9A3D40FF21BDAE684CBE14322E3EE65B1F3E188B8A3DE83D58BE086145BE6C40A73D8CCF853D940A443E50EE5FBEF0D6853DC08AD03DA0B0693E66453F3E98F7E9BD787D4C3E5C5D37BE2053023EE892933D585B283DF492E83DDA2F7F3EB054A53CC081983DFA5D493E5020E7BC60A8903CBCD9153E3891B93D90CCBDBCA0CB26BC"> : tensor<8x16xf32>}> : () -> tensor<8x16xf32>
    %8 = "tosa.const"() <{value = dense<[-0.121429406, 0.0909240693, 0.0867559984, 0.169947132]> : tensor<4xf32>}> : () -> tensor<4xf32>
    %9 = "tosa.const"() <{value = dense<[[0.0987183302, 0.29641974, -0.341286719, 0.168666959, 0.030892713, 0.211126029, -0.212056011, -0.0775878354], [-0.137849271, 1.364540e-01, -0.282808691, -0.25722453, 0.152626127, 0.061977107, 0.139302328, -0.25885573], [0.203331098, -0.339602977, -0.131707594, -0.195234984, 0.180179372, -0.154441521, 0.295544952, 0.219060048], [0.105150819, -0.199884921, 0.26574105, -0.22690931, -0.198123857, -0.0343345925, -0.0595564879, -0.174453765]]> : tensor<4x8xf32>}> : () -> tensor<4x8xf32>
    %10 = "tosa.transpose"(%arg0, %3) : (tensor<1x3x16x16xf32>, tensor<4xi32>) -> tensor<1x16x16x3xf32>
    %11 = "tosa.transpose"(%5, %3) : (tensor<8x3x3x3xf32>, tensor<4xi32>) -> tensor<8x3x3x3xf32>
    %12 = "tosa.conv2d"(%10, %11, %4) <{dilation = array<i64: 1, 1>, pad = array<i64: 1, 1, 1, 1>, stride = array<i64: 1, 1>}> : (tensor<1x16x16x3xf32>, tensor<8x3x3x3xf32>, tensor<8xf32>) -> tensor<1x16x16x8xf32>
    %13 = "tosa.transpose"(%12, %2) : (tensor<1x16x16x8xf32>, tensor<4xi32>) -> tensor<1x8x16x16xf32>
    %14 = "tosa.rsqrt"(%0) : (tensor<8x1x1xf32>) -> tensor<8x1x1xf32>
    %15 = "tosa.mul"(%13, %14) <{shift = 0 : i32}> : (tensor<1x8x16x16xf32>, tensor<8x1x1xf32>) -> tensor<1x8x16x16xf32>
    %16 = "tosa.clamp"(%15) <{max_fp = 3.40282347E+38 : f32, max_int = 2147483647 : i64, min_fp = 0.000000e+00 : f32, min_int = 0 : i64}> : (tensor<1x8x16x16xf32>) -> tensor<1x8x16x16xf32>
    %17 = "tosa.transpose"(%7, %1) : (tensor<8x16xf32>, tensor<2xi32>) -> tensor<16x8xf32>
    %18 = "tosa.reshape"(%16) <{new_shape = array<i64: 1, 128, 16>}> : (tensor<1x8x16x16xf32>) -> tensor<1x128x16xf32>
    %19 = "tosa.reshape"(%17) <{new_shape = array<i64: 1, 16, 8>}> : (tensor<16x8xf32>) -> tensor<1x16x8xf32>
    %20 = "tosa.matmul"(%18, %19) : (tensor<1x128x16xf32>, tensor<1x16x8xf32>) -> tensor<1x128x8xf32>
    %21 = "tosa.reshape"(%20) <{new_shape = array<i64: 1, 8, 16, 8>}> : (tensor<1x128x8xf32>) -> tensor<1x8x16x8xf32>
    %22 = "tosa.add"(%21, %6) : (tensor<1x8x16x8xf32>, tensor<8xf32>) -> tensor<1x8x16x8xf32>
    %23 = "tosa.clamp"(%22) <{max_fp = 3.40282347E+38 : f32, max_int = 2147483647 : i64, min_fp = 0.000000e+00 : f32, min_int = 0 : i64}> : (tensor<1x8x16x8xf32>) -> tensor<1x8x16x8xf32>
    %24 = "tosa.transpose"(%9, %1) : (tensor<4x8xf32>, tensor<2xi32>) -> tensor<8x4xf32>
    %25 = "tosa.reshape"(%23) <{new_shape = array<i64: 1, 128, 8>}> : (tensor<1x8x16x8xf32>) -> tensor<1x128x8xf32>
    %26 = "tosa.reshape"(%24) <{new_shape = array<i64: 1, 8, 4>}> : (tensor<8x4xf32>) -> tensor<1x8x4xf32>
    %27 = "tosa.matmul"(%25, %26) : (tensor<1x128x8xf32>, tensor<1x8x4xf32>) -> tensor<1x128x4xf32>
    %28 = "tosa.reshape"(%27) <{new_shape = array<i64: 1, 8, 16, 4>}> : (tensor<1x128x4xf32>) -> tensor<1x8x16x4xf32>
    %29 = "tosa.add"(%28, %8) : (tensor<1x8x16x4xf32>, tensor<4xf32>) -> tensor<1x8x16x4xf32>
    return %29 : tensor<1x8x16x4xf32>
  }
}

